local btn, dialog
local COL = {
	default = vmath.vector4(0, 0, 0, 1),
	highlight = vmath.vector4(1, 0.1, 0.15, 1)
}
local focus = "intro"

local STATE = require("mod.state")
local SET = require("mod.settings")
local FIGHTER = require("mod.fighters")

local function play_music()
	sound.play("#music_theme", nil, play_music)
end


function init(self)
	sound.set_group_gain("music", 0.3)
	play_music()
	msg.post(".", "acquire_input_focus")
	btn = {
		intro = {},
		menu = {
			fight = gui.get_node("btn_fight"),
			settings = gui.get_node("btn_settings"),
			exit = gui.get_node("btn_exit"),
			credits = gui.get_node("btn_credits")
		},
		credits = {
			close_credits = gui.get_node("btn_close_credits")
		}
	}
	dialog = {
		credits = gui.get_node("dialog_credits")
	}
	for key, val in pairs(dialog) do
		gui.set_enabled(val, false)
	end
	gui.animate(gui.get_node("title_lib"), "position.x", 640, gui.EASING_OUTCUBIC, 1, 1.5, function()
		if focus == "intro" then
			gui.animate(gui.get_node("title_barb"), "position.x", 640, gui.EASING_OUTELASTIC, 2, 0.5, function()
				if focus == "intro" then
					for key, val in pairs(btn.menu) do
						gui.animate(val, "color.w", 1, gui.EASING_LINEAR, 1, 0, function() focus = "menu" end)
					end
				end
			end)
		end
	end)
end


function on_message(self, message_id, message, sender)
	
end

function on_input(self, action_id, action)
	if action_id == hash("click") and action.pressed then
		if focus == "intro" then
			local pos = gui.get_position(gui.get_node("title_lib"))
			gui.set_position(gui.get_node("title_lib"), vmath.vector3(640, pos.y, pos.z))
			pos = gui.get_position(gui.get_node("title_barb"))
			gui.set_position(gui.get_node("title_barb"), vmath.vector3(640, pos.y, pos.z))
			for key, val in pairs(btn.menu) do
				gui.set_color(val, COL.default)
			end
			focus = "menu"
		else
			for key, val in pairs(btn[focus]) do
				if gui.pick_node(val, action.x, action.y) then
					if key == "fight" then
						STATE.fighter = {hash("vojta_beta"), hash("vojta_beta")}
						msg.post("bootstrap:/go", hash("selection_screen"))
					elseif key == "settings" then
						
					elseif key == "exit" then
						os.exit()
					elseif key == "credits" then
						gui.set_enabled(dialog.credits, true)
						focus = "credits"
						gui.set_color(btn.menu.credits, COL.default)
					elseif key == "close_credits" then
						gui.set_enabled(dialog.credits, false)
						focus = "menu"
						gui.set_color(btn.credits.close_credits, COL.default)
					end
				end
			end
		end
	elseif not action_id then
		for key, val in pairs(btn[focus]) do
			if gui.pick_node(val, action.x, action.y) then
				gui.set_color(val, COL.highlight)
			else
				gui.set_color(val, COL.default)
			end
		end
	end
end
